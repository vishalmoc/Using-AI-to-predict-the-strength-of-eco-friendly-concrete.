# 🌱 AI-Powered Eco-Friendly Concrete Strength Predictor

[![Python](https://img.shields.io/badge/Python-3.10-blue?logo=python&logoColor=white)](https://www.python.org/)
[![TensorFlow](https://img.shields.io/badge/TensorFlow-2.x-orange?logo=tensorflow&logoColor=white)](https://www.tensorflow.org/)
[![XGBoost](https://img.shields.io/badge/XGBoost-1.7-brightgreen?logo=xgboost&logoColor=white)](https://xgboost.readthedocs.io/)
[![CatBoost](https://img.shields.io/badge/CatBoost-1.1-purple?logo=catboost&logoColor=white)](https://catboost.ai/)

Predict the **compressive strength of eco-friendly concrete** using AI-powered models.  
This repository implements **Deep Neural Networks (DNN)**, **XGBoost**, and **CatBoost** to provide accurate predictions, along with data cleaning, scaling, hyperparameter tuning, and visualization pipelines. 🌍

---

## 🚀 Project Overview

Concrete is essential for construction, but traditional concrete has a large environmental footprint.  
This project focuses on:  

- Eco-friendly concrete solutions 🌿  
- Accurate prediction using **AI & gradient boosting** 🤖  
- Clean and reproducible pipelines with **visual insights** ✅

---

## 🛠️ Features

- **Outlier Removal:** Using Interquartile Range (IQR) method  
- **Feature Scaling:** StandardScaler for normalized input features  
- **Train/Validation/Test Split:** Stratified splits for balanced representation  
- **AI Models:** Deep Neural Network (DNN), XGBoost, CatBoost  
- **Hyperparameter Tuning:** RandomizedSearchCV for all models  
- **Evaluation Metrics:** MAE, R² Score, A20 Index (±20% accuracy)  
- **Visualizations:** Boxplots, True vs Predicted scatter plots, Training & Validation Loss curves  

---

## 🔍 Workflow

1. **Load & Explore Data**  
   - Load CSV dataset with Pandas  
   - Inspect dataset shape, info, missing values, and statistics  

2. **Outlier Detection & Removal**  
   - Visualize outliers using boxplots  
   - Remove extreme values with IQR filtering  

3. **Feature Preparation**  
   - Split into features `X` and target `y`  
   - Standardize features using **StandardScaler**  
   - Stratified train/validation/test split  

4. **Model Training**  
   - Train **DNN** with batch normalization and dropout layers  
   - Train **XGBoost Regressor**  
   - Train **CatBoost Regressor**  

5. **Hyperparameter Tuning**  
   - RandomizedSearchCV for DNN, XGBoost, and CatBoost  

6. **Evaluation & Visualization**  
   - Metrics: **MAE**, **R²**, **A20 Index**  
   - Visualize: Loss curves, scatter plots, metric comparison  

---

## 📊 Example Results

| Model    | MAE   | R²    | A20 Index |
|----------|-------|-------|-----------|
| DNN      | 2.3   | 0.92  | 0.85      |
| XGBoost  | 2.5   | 0.90  | 0.82      |
| CatBoost | 2.1   | 0.93  | 0.87      |

> Values are illustrative. Actual results may vary depending on the dataset and training.

---

## 🖥️ Quick Start

1. **Clone the Repository**  
```bash
git clone https://github.com/yourusername/eco-friendly-concrete-ai.git
cd eco-friendly-concrete-ai
